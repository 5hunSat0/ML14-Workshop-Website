pipeline {
environment {
imagename = "5hunsat0/ml14-workshop-nginx"
registryCredential = 'dockerhub-5hunsat0'
dockerImage = ''
KUBECONFIG = credentials('KUBECONFIG')
}
agent any
stages {
stage('Cloning Git') {
steps {
git([url: 'https://github.com/5hunSat0/ML14-Workshop-Website', branch: 'main', credentialsId: 'jenkins'])
}
}
stage('Building image') {
steps{
script {
dockerImage = docker.build imagename
}
}
}
stage('Deploy Image') {
steps{
script {
docker.withRegistry( '', registryCredential ) {
dockerImage.push("$BUILD_NUMBER")
dockerImage.push('latest')
}
}
}
}
stage('Remove Unused docker image') {
steps{
sh "docker rmi $imagename:$BUILD_NUMBER"
sh "docker rmi $imagename:latest"
}
}
stage('K8s deploy') {
steps {
script {
sh 'sed -i "s/dummy-annotation-value/$(date "+%Y%m%d-%H%M%S")/g" kubernetes/kustomization.yaml'
sh 'kubectl -n=default apply -k kubernetes/. --kubeconfig $KUBECONFIG'
}
}
}
}
post {
success {
slackSend (color: 'good', message: "Success: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")}
failure {
slackSend (color: 'danger', message: "Failure: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")}
}
}
